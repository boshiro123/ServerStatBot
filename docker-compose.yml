services:
  # PostgreSQL база данных
  db:
    image: postgres:15-alpine
    container_name: serverstat_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-metrics}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5433:5432" # Только localhost
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    # Ограничение ресурсов
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M

  # Telegram Bot приложение
  app:
    build: .
    container_name: serverstat_bot
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      TELEGRAM_TOKEN: ${TELEGRAM_TOKEN}
      DATABASE_URL: ${DATABASE_URL:-postgresql+asyncpg://postgres:postgres@db:5432/metrics}
      MONITOR_INTERVAL: ${MONITOR_INTERVAL:-60}
      ALERT_CPU_THRESHOLD: ${ALERT_CPU_THRESHOLD:-90}
      ALERT_RAM_THRESHOLD: ${ALERT_RAM_THRESHOLD:-90}
      ALERT_DISK_THRESHOLD: ${ALERT_DISK_THRESHOLD:-90}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    volumes:
      - ./logs:/app/logs
      # Монтируем /proc для доступа к метрикам хоста (read-only)
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    # Для доступа к метрикам хоста
    pid: "host"
    # Ограничение ресурсов
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 512M
        reservations:
          cpus: "0.25"
          memory: 128M

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: serverstat_network
